- create venv: file>new project

- set python interpreter

- pip3 install 'django<4'

- django-admin startproject drf_api .

- pip install django-cloudinary-storage

- pip install Pillow

- settings.py
    'cloudinary_storage',
    'django.contrib.staticfiles',
    'cloudinary',

- PP_4>Creating empty django project in PyCharm:
pip install dj_database_url==0.5.0 psycopg2 python-dotenv gunicorn

- .gitignore
.env
venv/
db.sqlite3
screenshots/

- .env
SECRET_KEY=django-insecure-*ul7)(f)fmtschtlt2+lk%a2&+4nu_(0k=x-xt+id==j+cli+r
CLOUDINARY_URL=cloudinary://737149144531711:18GdTVW7o4QgXQT09WmMxndlhOs@dkglcxx4y

- settings.py
from pathlib import Path
import os
from dotenv import load_dotenv
import dj_database_url
# Load environment variables from .env file
load_dotenv()
(at the very top, after importing)
CLOUDINARY_STORAGE = {'CLOUDINARY_URL': os.environ.get('CLOUDINARY_URL')}
MEDIA_URL = '/media/'
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

- settings.py
SECRET_KEY = os.environ.get('SECRET_KEY')

- git init

- pip freeze requirements.txt

- py manage.py startapp profiles

- settings.py
'profiles',

- profiles/models>create Profile model

- post_save.connect(create_profile, sender=User)

- register Profile in profile>admin

- python manage.py makemigrations
- python manage.py migrate

- py manage.py createsuperuser

- create configuration for py manage.py runserver

- pip install django djangorestframework

- settings.py
'rest_framework',

- pip freeze > requirements.txt

- create Profile model...

- create ProfileList view

- add signal to it, register in Admin

-create superuser to test signal

- create ProfileSerializer and setup owner field with dot notation to get username

- create get and put methods in profile detail view

- add built-in login/out view

- add object-level custom permission to the Profile

- add SerializerMethodField to create customed serializer field

- create post app and model

- create post serializer and add customed fields using dot notation and SerializerMethodField

- add choice of image filters and images upload validation

- create PostList view with get and post methods

- add permission to the vie to allow only authenticated user to create the post

- create posts>urls.py for PostList view

























- py manage.py startapp articles

- add app to settings.py
